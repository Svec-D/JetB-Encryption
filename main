package encryptdecrypt;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.*;

public class Main {
    public static void main(String[] args) {

        boolean fileout = false;
        String crypt = "enc";
        String message = "";
        String alg = "shift";
        int ch;
        int key = 0;
        char symbol;
        String encryptedMessage = "";

        File FileOut = null;
        File FileIn = null;

        for (int i = 0; i < args.length; i++) {

            if (args[i].equals("-mode")) {
                crypt = args[i + 1];
            } else if (args[i].equals("-key")) {
                key = Integer.parseInt(args[i + 1]);
            } else if (args[i].equals("-data")) {
                message = args[i + 1];
            } else if (args[i].equals("-in")) {
                FileIn = new File(args[i + 1]);
            } else if (args[i].equals("-out")) {
                fileout = true;
                FileOut = new File(args[i + 1]);
            } else if (args[i].equals("-alg")) {
                alg = args[i + 1];
            }
        }


        if (FileIn.exists() && message == "") {
            try {
                Scanner fileRead = new Scanner(FileIn);
                while (fileRead.hasNextLine()) {
                    message = fileRead.nextLine();
                }
                fileRead.close();
            } catch (Exception e) {
                System.out.println("Error");
            }

        }

        if (crypt.equals("enc")) {

            if (alg.equals("shift")) {

                for (int i = 0; i < message.length(); ++i) {
                    ch = message.charAt(i);

                    if (ch >= 'a' && ch <= 'z') {
                        ch = (char) (ch + key);

                        if (ch > 'z') {
                            ch = (char) (ch - 'z' + 'a' - 1);
                        }
                        symbol = (char) ch;
                        encryptedMessage += symbol;
                    } else if (ch >= 'A' && ch <= 'Z') {
                        ch = (char) (ch + key);

                        if (ch > 'Z') {
                            ch = (char) (ch - 'Z' + 'A' - 1);
                        }
                        symbol = (char) ch;
                        encryptedMessage += symbol;
                    } else {
                        symbol = (char) ch;
                        encryptedMessage += symbol;
                    }
                }

            } else {
                for (int i = 0; i < message.length(); ++i) {

                    ch = (int) message.charAt(i);
                    ch = (int) (ch + key);

                    symbol = (char) ch;

                    encryptedMessage += symbol;
                }
            }


        } else if (crypt.equals("dec")) {

            if (alg.equals("shift")) {

                for (int i = 0; i < message.length(); ++i) {
                    ch = message.charAt(i);

                    if (ch >= 'a' && ch <= 'z') {
                        ch = (char) (ch - key);

                        if (ch < 'a') {
                            ch = (char) (ch + 'z' - 'a' + 1);
                        }
                        symbol = (char) ch;
                        encryptedMessage += symbol;
                    } else if (ch >= 'A' && ch <= 'Z') {
                        ch = (char) (ch - key);

                        if (ch < 'A') {
                            ch = (char) (ch + 'Z' - 'A' + 1);
                        }
                        symbol = (char) ch;
                        encryptedMessage += symbol;
                    } else {
                        symbol = (char) ch;
                        encryptedMessage += symbol;
                    }
                }

            } else {
                for (int i = 0; i < message.length(); ++i) {

                    ch = (int) message.charAt(i);
                    ch = (int) (ch - key);

                    symbol = (char) ch;

                    encryptedMessage += symbol;
                }
            }
        }
            System.out.println(encryptedMessage);
            if (fileout) {

                try {

                    FileWriter fw = new FileWriter(FileOut);
                    fw.write(encryptedMessage);
                    fw.close();
                } catch (Exception e) {
                    System.out.println("Error");
                }

            } else if (message != "" && !fileout) {
                System.out.println(encryptedMessage);

            } else {
                System.out.println("Error");
            }


        }
    }
